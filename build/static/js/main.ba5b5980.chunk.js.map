{"version":3,"sources":["components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/ContactForm/initialState.js","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Notification/Notification.js","App.js","redux/phonebook/isAlreadyAdded-function.js","redux/phonebook/phonebook-reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","initialState","name","number","addNewContact","createAction","payload","id","nanoid","deleteContact","updateFilter","ContactForm","useReducer","state","action","option","value","dispatchState","dispatch","useDispatch","onSubmit","e","preventDefault","className","s","form","label","htmlFor","input","type","pattern","title","required","onChange","currentTarget","Contact","deleteFunction","listItem","listBtn","onClick","ContactList","contactsArray","useSelector","phonebook","contacts","filterValue","filter","deleteContactBtn","contactsList","el","toLowerCase","includes","map","Filter","Notification","msg","App","length","isAlreadyAdded","array","newValue","some","createReducer","toast","info","_","phonebookReducer","combineReducers","phonebookPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ba5b5980.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Contact_listItem__33L2X\",\"listBtn\":\"Contact_listBtn__1uw8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__XpWCy\",\"input\":\"Filter_input__1rbmp\"};","const initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport default initialState;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport const addNewContact = createAction(\"phonebook/Add\", (name, number) => {\r\n  return {\r\n    payload: {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\nexport const deleteContact = createAction(\"phonebook/Delete\");\r\nexport const updateFilter = createAction(\"phonebook/UpdateFilter\");\r\n","import React, { useReducer } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport initialState from \"./initialState\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addNewContact } from \"../../redux/phonebook/phonebook-actions\";\r\n\r\nfunction ContactForm() {\r\n  const [state, dispatchState] = useReducer(handleChange, initialState);\r\n  const dispatch = useDispatch();\r\n\r\n  const addContact = (name, number) => dispatch(addNewContact(name, number));\r\n\r\n  function handleChange(state, action) {\r\n    const { option, value } = action;\r\n\r\n    if (option === \"reset\") {\r\n      return initialState;\r\n    }\r\n\r\n    return { ...state, [option]: value };\r\n  }\r\n\r\n  function submitNewContact(e) {\r\n    e.preventDefault();\r\n    addContact(state.name, state.number);\r\n    dispatchState({ option: \"reset\" });\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitNewContact} className={s.form}>\r\n      <label className={s.label} htmlFor=\"name\">\r\n        Name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n        value={state.name}\r\n        onChange={(e) => {\r\n          const { name, value } = e.currentTarget;\r\n          dispatchState({ option: name, value });\r\n        }}\r\n      />\r\n      <label className={s.label} htmlFor=\"number\">\r\n        Number\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        id=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n        value={state.number}\r\n        onChange={(e) => {\r\n          const { name, value } = e.currentTarget;\r\n          dispatchState({ option: name, value });\r\n        }}\r\n      />\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addNewContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Contact.module.css\";\r\n\r\nfunction Contact({ id, name, number, deleteFunction }) {\r\n  return (\r\n    <li className={s.listItem}>\r\n      <p>{`${name}: ${number}`}</p>\r\n      <button\r\n        className={s.listBtn}\r\n        onClick={() => {\r\n          deleteFunction(id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteFunction: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import Contact from \"../Contact\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/phonebook/phonebook-actions\";\r\n\r\nfunction ContactList() {\r\n  const contactsArray = useSelector((state) => state.phonebook.contacts);\r\n  const filterValue = useSelector((state) => state.phonebook.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteContactBtn = (id) => dispatch(deleteContact(id));\r\n\r\n  const getFilteredContacts = contactsArray.filter((el) =>\r\n    el.name.toLowerCase().includes(filterValue.toLowerCase())\r\n  );\r\n\r\n  const contactsList = getFilteredContacts.map(({ id, name, number }) => (\r\n    <Contact\r\n      key={id}\r\n      id={id}\r\n      name={name}\r\n      number={number}\r\n      deleteFunction={deleteContactBtn}\r\n    />\r\n  ));\r\n\r\n  return <ul>{contactsList}</ul>;\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactsArray: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  deleteContactBtn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateFilter } from \"../../redux/phonebook/phonebook-actions\";\r\n\r\nfunction Filter() {\r\n  const filterValue = useSelector((state) => state.phonebook.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const updateFilterFunc = ({ currentTarget }) =>\r\n    dispatch(updateFilter(currentTarget.value));\r\n\r\n  return (\r\n    <>\r\n      <label className={s.label} htmlFor=\"filter\">\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        id=\"filter\"\r\n        value={filterValue}\r\n        onChange={updateFilterFunc}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filterValue: PropTypes.string.isRequired,\r\n  updateFilterFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","function Notification({ msg }) {\r\n  return <p>{msg}</p>;\r\n}\r\n\r\nexport default Notification;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport \"./App.css\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\nimport Notification from \"./components/Notification\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction App() {\r\n  const contacts = useSelector((state) => state.phonebook.contacts);\r\n  const noContactsAdded = \"You seem not to have any contacts yet\";\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      {contacts.length ? (\r\n        <>\r\n          <Filter />\r\n          <ContactList />\r\n        </>\r\n      ) : (\r\n        <Notification msg={noContactsAdded} />\r\n      )}\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const isAlreadyAdded = (array, newValue) =>\r\n  array.some((el) => el.name.toLowerCase() === newValue.toLowerCase());\r\n\r\nexport default isAlreadyAdded;\r\n","import {\r\n  addNewContact,\r\n  deleteContact,\r\n  updateFilter,\r\n} from \"./phonebook-actions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport isAlreadyAdded from \"./isAlreadyAdded-function\";\r\n\r\nconst contacts = createReducer([], {\r\n  [addNewContact]: (state, { payload: { id, name, number } }) => {\r\n    if (isAlreadyAdded(state, name)) {\r\n      toast.info(`${name} has already been added`);\r\n      return;\r\n    }\r\n    return [...state, { id, name, number }];\r\n  },\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter((el) => el.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [updateFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const phonebookReducer = combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { phonebookReducer } from \"./phonebook/phonebook-reducers\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst phonebookPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: \"filter\",\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { persistor } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__39ksH\",\"label\":\"ContactForm_label__SkOlk\",\"input\":\"ContactForm_input__3Aq4i\"};"],"sourceRoot":""}