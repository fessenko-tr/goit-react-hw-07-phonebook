{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/ContactForm/initialState.js","api/mockAPI/mockAPI.js","redux/phonebook/operations.js","components/ContactForm/isAlreadyAdded-function.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","redux/phonebook/phonebook-actions.js","components/Filter/Filter.js","components/Notification/Notification.js","App.js","redux/phonebook/phonebook-reducers.js","redux/store.js","index.js"],"names":["module","exports","initialState","name","number","MockAPI","path","this","axiosInstance","get","data","post","delete","axios","create","baseURL","fetchContacts","createAsyncThunk","a","contacts","deleteContactById","id","deletedContact","addContact","contact","addedContact","isAlreadyAdded","array","newValue","some","el","toLowerCase","ContactForm","useReducer","state","action","option","value","dispatchState","dispatch","useDispatch","contactsArray","useSelector","phonebook","onSubmit","e","preventDefault","toast","info","className","s","form","label","htmlFor","input","type","pattern","title","required","onChange","currentTarget","Contact","deleteFunction","listItem","listBtn","onClick","ContactList","filterValue","filter","deleteContactBtn","contactsList","includes","map","updateFilter","createAction","Filter","Notification","msg","App","isLoading","error","useEffect","length","createReducer","fulfilled","payload","_","pending","rejected","phonebookReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b95f016.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__IWqVo\",\"label\":\"ContactForm_label__1EY1l\",\"input\":\"ContactForm_input__3Blmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Contact_listItem__2kRRr\",\"listBtn\":\"Contact_listBtn__36o9E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3ccTI\",\"input\":\"Filter_input__3MrL7\"};","const initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport default initialState;\r\n","import axios from \"axios\";\r\n\r\nclass MockAPI {\r\n  static axiosInstance = axios.create({\r\n    baseURL: \"https://61e019670f3bdb0017934d83.mockapi.io\",\r\n  });\r\n\r\n  static get(path) {\r\n    return this.axiosInstance.get(path);\r\n  }\r\n\r\n  static post(path, data) {\r\n    return this.axiosInstance.post(path, data);\r\n  }\r\n\r\n  static delete(path) {\r\n    return this.axiosInstance.delete(path);\r\n  }\r\n}\r\n\r\nexport default MockAPI;\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport MockAPI from \"../../api/mockAPI/mockAPI\";\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/FetchContacts\",\r\n  async () => {\r\n    const contacts = await MockAPI.get(\"/contacts\");\r\n\r\n    return contacts.data;\r\n  }\r\n);\r\n\r\nexport const deleteContactById = createAsyncThunk(\r\n  \"contacts/DeleteConctact\",\r\n  async (id) => {\r\n    const deletedContact = await MockAPI.delete(`/contacts/${id}`);\r\n\r\n    return deletedContact.data.id;\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contacts/AddContact\",\r\n  async (contact) => {\r\n    const addedContact = await MockAPI.post(\"/contacts\", contact);\r\n\r\n    return addedContact.data;\r\n  }\r\n);\r\n","const isAlreadyAdded = (array, newValue) =>\r\n  array.some((el) => el.name.toLowerCase() === newValue.toLowerCase());\r\n\r\nexport default isAlreadyAdded;\r\n","import React, { useReducer } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport s from \"./ContactForm.module.css\";\r\nimport initialState from \"./initialState\";\r\nimport { addContact } from \"../../redux/phonebook/operations\";\r\nimport isAlreadyAdded from \"./isAlreadyAdded-function\";\r\n\r\nfunction ContactForm() {\r\n  const [state, dispatchState] = useReducer(handleChange, initialState);\r\n  const dispatch = useDispatch();\r\n  const contactsArray = useSelector((state) => state.phonebook.contacts);\r\n\r\n  function handleChange(state, action) {\r\n    const { option, value } = action;\r\n\r\n    if (option === \"reset\") {\r\n      return initialState;\r\n    }\r\n\r\n    return { ...state, [option]: value };\r\n  }\r\n\r\n  function submitNewContact(e) {\r\n    const { name } = state;\r\n\r\n    e.preventDefault();\r\n\r\n    if (isAlreadyAdded(contactsArray, name)) {\r\n      toast.info(`${name} has already been added`);\r\n      dispatchState({ option: \"reset\" });\r\n      return;\r\n    }\r\n\r\n    dispatch(addContact(state));\r\n    dispatchState({ option: \"reset\" });\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitNewContact} className={s.form}>\r\n      <label className={s.label} htmlFor=\"name\">\r\n        Name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n        value={state.name}\r\n        onChange={(e) => {\r\n          const { name, value } = e.currentTarget;\r\n          dispatchState({ option: name, value });\r\n        }}\r\n      />\r\n      <label className={s.label} htmlFor=\"number\">\r\n        Number\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        id=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n        value={state.number}\r\n        onChange={(e) => {\r\n          const { name, value } = e.currentTarget;\r\n          dispatchState({ option: name, value });\r\n        }}\r\n      />\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Contact.module.css\";\r\n\r\nfunction Contact({ id, name, number, deleteFunction }) {\r\n  return (\r\n    <li className={s.listItem}>\r\n      <p>{`${name}: ${number}`}</p>\r\n      <button\r\n        className={s.listBtn}\r\n        onClick={() => {\r\n          deleteFunction(id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteFunction: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import Contact from \"../Contact\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContactById } from \"../../redux/phonebook/operations\";\r\n\r\nfunction ContactList() {\r\n  const contactsArray = useSelector((state) => state.phonebook.contacts);\r\n  const filterValue = useSelector((state) => state.phonebook.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteContactBtn = (id) => dispatch(deleteContactById(id));\r\n\r\n  const getFilteredContacts = contactsArray.filter((el) =>\r\n    el.name?.toLowerCase().includes(filterValue.toLowerCase())\r\n  );\r\n\r\n  const contactsList = getFilteredContacts.map(({ id, name, number }) => (\r\n    <Contact\r\n      key={id}\r\n      id={id}\r\n      name={name}\r\n      number={number}\r\n      deleteFunction={deleteContactBtn}\r\n    />\r\n  ));\r\n\r\n  return <ul>{contactsList}</ul>;\r\n}\r\n\r\nexport default ContactList;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const updateFilter = createAction(\"phonebook/UpdateFilter\");\r\n","import s from \"./Filter.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateFilter } from \"../../redux/phonebook/phonebook-actions\";\r\n\r\nfunction Filter() {\r\n  const filterValue = useSelector((state) => state.phonebook.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const updateFilterFunc = ({ currentTarget }) =>\r\n    dispatch(updateFilter(currentTarget.value));\r\n\r\n  return (\r\n    <>\r\n      <label className={s.label} htmlFor=\"filter\">\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        id=\"filter\"\r\n        value={filterValue}\r\n        onChange={updateFilterFunc}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction Notification({ msg }) {\r\n  return <p>{msg}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  msg: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport \"./App.css\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\nimport Notification from \"./components/Notification\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { fetchContacts } from \"./redux/phonebook/operations\";\r\nfunction App() {\r\n  const contacts = useSelector((state) => state.phonebook.contacts);\r\n  const isLoading = useSelector((state) => state.phonebook.isLoading);\r\n  const error = useSelector((state) => state.phonebook.error);\r\n  const dispatch = useDispatch();\r\n\r\n  const noContactsAdded = \"You seem not to have any contacts yet\";\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      {error && <p>Something went wrong, try again later</p>}\r\n      {contacts.length > 0 ? (\r\n        <>\r\n          <Filter />\r\n          <ContactList />\r\n        </>\r\n      ) : (\r\n        <Notification msg={noContactsAdded} />\r\n      )}\r\n      {isLoading && <p>Your request is being processed</p>}\r\n\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { updateFilter } from \"./phonebook-actions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { fetchContacts, deleteContactById, addContact } from \"./operations\";\r\n\r\nconst contacts = createReducer([], {\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContactById.fulfilled]: (state, { payload }) =>\r\n    state.filter((el) => el.id !== payload),\r\n  [fetchContacts.fulfilled]: (_, { payload }) => [...payload],\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [updateFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContactById.pending]: () => true,\r\n  [deleteContactById.fulfilled]: () => false,\r\n  [deleteContactById.rejected]: () => false,\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [addContact.pending]: () => null,\r\n  [addContact.rejected]: (_, { payload }) => payload,\r\n  [deleteContactById.pending]: () => null,\r\n  [deleteContactById.rejected]: (_, { payload }) => payload,\r\n  [fetchContacts.pending]: () => null,\r\n  [fetchContacts.rejected]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const phonebookReducer = combineReducers({\r\n  contacts,\r\n  filter,\r\n  isLoading,\r\n  error,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { phonebookReducer } from \"./phonebook/phonebook-reducers\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}